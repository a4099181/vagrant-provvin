<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">

<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Add-VpnConnectionTriggers</command:name>
<command:verb>Add</command:verb>
<command:noun>VpnConnectionTriggers</command:noun>
<maml:description><maml:para>This function adds VPN connection triggers.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>This function in details registers VPN application triggers for specified * executables,
</maml:para>
<maml:para>* universal apps.
</maml:para>
<maml:para>
</maml:para>
<maml:para>The primary aim is more ergonomics.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Add-VpnConnectionTriggers</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>ConnectionName</maml:name>
<maml:Description><maml:para>VPN connection name.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>ExecutablePaths</maml:name>
<maml:Description><maml:para>Paths where specified executable should be search for.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>( ${env:ProgramFiles(x86)}, $env:ProgramW6432 , $env:USERPROFILE, "$env:windir\System32" )</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>Executables</maml:name>
<maml:Description><maml:para>Executable to register as VPN connection triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>( 'devenv.exe', 'eTask.exe', 'mintty.exe', 'mstsc.exe' )</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none"><maml:name>UniversalApps</maml:name>
<maml:Description><maml:para>Universal Apps to register as VPN connection triggers.
</maml:para>
<maml:para>Please note, that universal app are searched using .EndsWith(&lt;param-value&gt;) function.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>.MicrosoftEdge</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>ConnectionName</maml:name>
<maml:Description><maml:para>VPN connection name.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>ExecutablePaths</maml:name>
<maml:Description><maml:para>Paths where specified executable should be search for.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>( ${env:ProgramFiles(x86)}, $env:ProgramW6432 , $env:USERPROFILE, "$env:windir\System32" )</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>Executables</maml:name>
<maml:Description><maml:para>Executable to register as VPN connection triggers.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>( 'devenv.exe', 'eTask.exe', 'mintty.exe', 'mstsc.exe' )</dev:defaultValue>
</command:parameter>
<command:parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="4" aliases="none"><maml:name>UniversalApps</maml:name>
<maml:Description><maml:para>Universal Apps to register as VPN connection triggers.
</maml:para>
<maml:para>Please note, that universal app are searched using .EndsWith(&lt;param-value&gt;) function.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String[]</command:parameterValue>
<dev:type><maml:name>String[]</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>.MicrosoftEdge</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Add-VpnConnectionTriggers</dev:code>
<dev:remarks><maml:para>Adds default VPN connection triggers. If you want to add custom VPN connection trigger you may consider using standard  `Add-VpnConnectionTriggerApplication` cmdlet also. Please, take a look at: `Get-Help Add-VpnConnectionTriggerApplication` for more information.
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>https://github.com/a4099181/vagrant-officeVM/blob/master/docs/Add-VpnConnectionTriggers.md</maml:linkText>
<maml:uri>https://github.com/a4099181/vagrant-officeVM/blob/master/docs/Add-VpnConnectionTriggers.md</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>https://github.com/a4099181/vagrant-officeVM/blob/master/provision/powershell/vpn.psm1</maml:linkText>
<maml:uri>https://github.com/a4099181/vagrant-officeVM/blob/master/provision/powershell/vpn.psm1</maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
<command:command xmlns:maml="http://schemas.microsoft.com/maml/2004/10" xmlns:command="http://schemas.microsoft.com/maml/dev/command/2004/10" xmlns:dev="http://schemas.microsoft.com/maml/dev/2004/10" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<command:details><command:name>Connect-Vpn</command:name>
<command:verb>Connect</command:verb>
<command:noun>Vpn</command:noun>
<maml:description><maml:para>This function connects VPN.
</maml:para>
</maml:description>
</command:details>
<maml:description><maml:para>This function in details: * takes a dialup credentials list from configuration file,
</maml:para>
<maml:para>* establishes VPN connection,
</maml:para>
<maml:para>* supports encrypted secret data,
</maml:para>
<maml:para>* uses rasdial tool to establish VPN connection.
</maml:para>
</maml:description>
<command:syntax><command:syntaxItem><maml:name>Connect-Vpn</maml:name>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>CfgFile</maml:name>
<maml:Description><maml:para>Configuration file.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>KeyFile</maml:name>
<maml:Description><maml:para>Encryption key file.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>ConnectionName</maml:name>
<maml:Description><maml:para>VPN connection name to connect.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:syntaxItem>
</command:syntax>
<command:parameters><command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="1" aliases="none"><maml:name>CfgFile</maml:name>
<maml:Description><maml:para>Configuration file.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="2" aliases="none"><maml:name>KeyFile</maml:name>
<maml:Description><maml:para>Encryption key file.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
<command:parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="3" aliases="none"><maml:name>ConnectionName</maml:name>
<maml:Description><maml:para>VPN connection name to connect.
</maml:para>
</maml:Description>
<command:parameterValue required="true" variableLength="false">String</command:parameterValue>
<dev:type><maml:name>String</maml:name>
<maml:uri /></dev:type>
<dev:defaultValue>None</dev:defaultValue>
</command:parameter>
</command:parameters>
<command:inputTypes></command:inputTypes>
<command:returnValues></command:returnValues>
<maml:alertSet><maml:alert><maml:para>
</maml:para>
</maml:alert>
</maml:alertSet>
<command:examples><command:example><maml:title>Example 1</maml:title>
<dev:code>PS C:\&gt; Connect-Vpn cfg.json encryption.key &lt;vpn-connection-name&gt;</dev:code>
<dev:remarks><maml:para>Connects to named VPN. Pass your encryption.key file for secret data decryption.
</maml:para>
</dev:remarks>
</command:example>
<command:example><maml:title>Example 2 Sample content of the `cfg.json`</maml:title>
<dev:code>{
    "vault"               : [
        {
            "type"        : "dialup",
            "secret"      : {
                "name"    : "&lt;connection-name&gt;",
                "domain"  : "&lt;domainname&gt;",
                "username": "&lt;username&gt;",
                "password": "&lt;password&gt;"
            }
            , "disabled": true
        }
    ]
}</dev:code>
<dev:remarks><maml:para>&gt; The values of the `secret` object properties should be encrypted .
</maml:para>
</dev:remarks>
</command:example>
</command:examples>
<command:relatedLinks><maml:navigationLink><maml:linkText>https://github.com/a4099181/vagrant-officeVM/blob/master/docs/Connect-Vpn.md</maml:linkText>
<maml:uri>https://github.com/a4099181/vagrant-officeVM/blob/master/docs/Connect-Vpn.md</maml:uri>
</maml:navigationLink>
<maml:navigationLink><maml:linkText>https://github.com/a4099181/vagrant-officeVM/blob/master/provision/powershell/vpn.psm1</maml:linkText>
<maml:uri>https://github.com/a4099181/vagrant-officeVM/blob/master/provision/powershell/vpn.psm1</maml:uri>
</maml:navigationLink>
</command:relatedLinks>
</command:command>
</helpItems>
